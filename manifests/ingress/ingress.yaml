kind: Namespace
apiVersion: v1
metadata:
  name: ingress
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: citest-ingress
  namespace: ingress
spec:
  backend:
    serviceName: citest-ingress-svc
    servicePort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: citest-nginx-deploy
  namespace: ingress
  labels:
    app: citest-ingress
spec:
  replicas: 1
  selector:
    matchLabels:
      app: citest-ingress
  template:
    metadata:
      labels:
        app: citest-ingress
    spec:
      containers:
        - name: nginx
          image: nginx
          ports:
            - containerPort: 80
          volumeMounts:
            - mountPath: /etc/nginx
              readOnly: true
              name: nginx-conf
      volumes:
        - name: nginx-conf
          configMap:
            name: citest-nginx-conf-v3
            items:
              - key: nginx.conf
                path: nginx.conf
              - key: default.conf
                path: conf.d/default.conf
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: citest-nginx-conf-v3
  namespace: ingress
data:
  nginx.conf: |
    user  nginx;
    worker_processes  1;

    error_log  /var/log/nginx/error.log warn;
    pid        /var/run/nginx.pid;


    events {
        worker_connections  1024;
    }


    http {
        default_type  application/octet-stream;

        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';

        access_log  /var/log/nginx/access.log  main;

        sendfile        on;
        #tcp_nopush     on;

        keepalive_timeout  65;

        #gzip  on;

        include /etc/nginx/conf.d/*.conf;
    }
  default.conf: |
    server {
        listen 80 default_server;
        server_name _;
        default_type text/plain;
        return 200 "hello\n";
    }
    server {
        listen 80;
        server_name ~^(?<subhost>.+)\.citest\.tk$;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        location / {
          resolver 10.7.240.10;
          proxy_pass http://$subhost-svc.$subhost.svc.cluster.local$request_uri;
        }
    }
---
apiVersion: v1
kind: Service
metadata:
  name: citest-ingress-svc
  namespace: ingress
spec:
  type: NodePort
  selector:
    app: citest-ingress
  ports:
    - port: 80
      targetPort: 80
